/*
RENAD ALDHASE 1806983
 */
package project380;

import cpit380practice.*;
import java.awt.Image;
import javax.swing.ImageIcon;

/**
 *
 * @author Rnd21
 */
public class RefAndRotation extends javax.swing.JFrame {

    //static
    static String image1;
    static Picture pic1;


    public RefAndRotation() {
        initComponents();
        setLocationRelativeTo(null);
        this.setTitle("Reflection & Rotation");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        Before1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        sliderReflectionH = new javax.swing.JSlider();
        jLabel10 = new javax.swing.JLabel();
        sliderReflectionF = new javax.swing.JSlider();
        DiagonalRefD2 = new javax.swing.JButton();
        DiagonalRefD1 = new javax.swing.JButton();
        jSeparator2 = new javax.swing.JSeparator();
        Rotation = new javax.swing.JSlider();
        jLabel17 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(250, 231, 238));

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/rightarrow-01.png"))); // NOI18N
        jLabel1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel1MouseClicked(evt);
            }
        });

        Before1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(176, 181, 189)));

        jButton1.setBackground(new java.awt.Color(222, 222, 222));
        jButton1.setFont(new java.awt.Font("Modern No. 20", 0, 18)); // NOI18N
        jButton1.setForeground(new java.awt.Color(102, 102, 102));
        jButton1.setText("Browse");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Modern No. 20", 2, 24)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(0, 153, 153));
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel7.setText("Select The Reflection :");

        jLabel13.setFont(new java.awt.Font("Modern No. 20", 0, 24)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(0, 102, 102));
        jLabel13.setText("Horizontal ");

        sliderReflectionH.setMajorTickSpacing(10);
        sliderReflectionH.setMaximum(50);
        sliderReflectionH.setPaintLabels(true);
        sliderReflectionH.setPaintTicks(true);
        sliderReflectionH.setValue(0);
        sliderReflectionH.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                sliderReflectionHStateChanged(evt);
            }
        });

        jLabel10.setFont(new java.awt.Font("Modern No. 20", 0, 24)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(0, 102, 102));
        jLabel10.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel10.setText("Vertical ");
        jLabel10.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        sliderReflectionF.setMajorTickSpacing(10);
        sliderReflectionF.setMaximum(50);
        sliderReflectionF.setPaintLabels(true);
        sliderReflectionF.setPaintTicks(true);
        sliderReflectionF.setValue(0);
        sliderReflectionF.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                sliderReflectionFStateChanged(evt);
            }
        });

        DiagonalRefD2.setBackground(new java.awt.Color(222, 222, 222));
        DiagonalRefD2.setFont(new java.awt.Font("Modern No. 20", 0, 18)); // NOI18N
        DiagonalRefD2.setForeground(new java.awt.Color(102, 102, 102));
        DiagonalRefD2.setText("Diagonal Ref D2");
        DiagonalRefD2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DiagonalRefD2ActionPerformed(evt);
            }
        });

        DiagonalRefD1.setBackground(new java.awt.Color(222, 222, 222));
        DiagonalRefD1.setFont(new java.awt.Font("Modern No. 20", 0, 18)); // NOI18N
        DiagonalRefD1.setForeground(new java.awt.Color(102, 102, 102));
        DiagonalRefD1.setText("Diagonal Ref D1");
        DiagonalRefD1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DiagonalRefD1ActionPerformed(evt);
            }
        });

        Rotation.setMajorTickSpacing(90);
        Rotation.setMaximum(360);
        Rotation.setMinimum(-360);
        Rotation.setPaintLabels(true);
        Rotation.setPaintTicks(true);
        Rotation.setSnapToTicks(true);
        Rotation.setValue(0);
        Rotation.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                RotationStateChanged(evt);
            }
        });

        jLabel17.setFont(new java.awt.Font("Modern No. 20", 0, 24)); // NOI18N
        jLabel17.setForeground(new java.awt.Color(0, 153, 153));
        jLabel17.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel17.setText(" The Rotation :");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(Before1, javax.swing.GroupLayout.PREFERRED_SIZE, 478, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(40, 40, 40)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                        .addGap(0, 0, Short.MAX_VALUE)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                    .addComponent(jLabel13)
                                                    .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                    .addComponent(sliderReflectionF, javax.swing.GroupLayout.PREFERRED_SIZE, 280, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(sliderReflectionH, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                                .addGap(24, 24, 24))
                                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                    .addComponent(Rotation, javax.swing.GroupLayout.PREFERRED_SIZE, 393, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                                        .addGap(21, 21, 21)
                                                        .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 347, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                                .addGap(19, 19, 19))))
                                    .addComponent(jSeparator2)))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(142, 142, 142)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(DiagonalRefD2, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(DiagonalRefD1, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(172, 172, 172)
                                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 227, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addGap(274, 274, 274))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(7, 7, 7)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(Before1, javax.swing.GroupLayout.PREFERRED_SIZE, 417, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(sliderReflectionH, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(15, 15, 15)
                                .addComponent(jLabel13)))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(26, 26, 26)
                                .addComponent(sliderReflectionF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel10)
                                .addGap(30, 30, 30)))
                        .addComponent(DiagonalRefD1, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(DiagonalRefD2, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Rotation, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 37, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 974, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jLabel1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel1MouseClicked
        // TODO add your handling code here:
        new picPart().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jLabel1MouseClicked

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        //Pic1
        image1 = FileChooser.pickAFile();
        pic1 = new Picture(image1);
        Before1.setIcon(new ImageIcon(pic1.getImage().getScaledInstance(Before1.getWidth(), Before1.getHeight(), Image.SCALE_SMOOTH)));
    }//GEN-LAST:event_jButton1ActionPerformed

    private void sliderReflectionHStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_sliderReflectionHStateChanged

        pic1 = new Picture(image1);
        double InputReflection = (double) (sliderReflectionH.getValue());
        double t = InputReflection / 100.0;
        double r = pic1.getHeight() * t;
        Pixel topPixel = null;
        Pixel bottomPixel = null;

        int mirrorPoint = (int) (r);

        // loop through the columns
        for (int x = 0; x < pic1.getWidth(); x++) {
            // loop from 1 to just before the mirror point
            for (int y = 0; y < mirrorPoint; y++) {
                topPixel = pic1.getPixel(x, y);
                bottomPixel = pic1.getPixel(x, pic1.getHeight() - 1 - y);
                topPixel.setColor(bottomPixel.getColor());
            }
        }

        Before1.setIcon(new ImageIcon(pic1.getImage().getScaledInstance(Before1.getWidth(), Before1.getHeight(), Image.SCALE_SMOOTH)));
    }//GEN-LAST:event_sliderReflectionHStateChanged

    private void sliderReflectionFStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_sliderReflectionFStateChanged
        // TODO add your handling code here:
        pic1 = new Picture(image1);
        double InputReflection = (double) (sliderReflectionF.getValue());
        double t = InputReflection / 100.0;
        double r = pic1.getWidth() * t;
        Pixel topPixel = null;
        Pixel bottomPixel = null;

        int mirrorPoint = (int) (r);
        // loop through the columns
        for (int y = 0; y < pic1.getHeight(); y++) {
            // loop from 1 to just before the mirror point
            for (int x = 0; x < mirrorPoint; x++) {
                topPixel = pic1.getPixel(x, y);
                bottomPixel = pic1.getPixel(pic1.getWidth() - 1 - x, y);
                topPixel.setColor(bottomPixel.getColor());
            }
        }
        Before1.setIcon(new ImageIcon(pic1.getImage().getScaledInstance(Before1.getWidth(), Before1.getHeight(), Image.SCALE_SMOOTH)));
    }//GEN-LAST:event_sliderReflectionFStateChanged

    private void DiagonalRefD2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DiagonalRefD2ActionPerformed

        pic1 = new Picture(image1);
        pic1.mirrorDiagTopRightBotLeft();
        Before1.setIcon(new ImageIcon(pic1.getImage()));
    }//GEN-LAST:event_DiagonalRefD2ActionPerformed

    private void DiagonalRefD1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DiagonalRefD1ActionPerformed
        // TODO add your handling code here:
        pic1 = new Picture(image1);
        pic1.mirrorDiagTopLeftBotRight();
        Before1.setIcon(new ImageIcon(pic1.getImage()));
    }//GEN-LAST:event_DiagonalRefD1ActionPerformed

    private void RotationStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_RotationStateChanged
        // TODO add your handling code here:

        int value = Rotation.getValue();

        pic1 = new Picture(image1);
        Picture target = new Picture();

        Pixel pix1 = null;
        Pixel targetPixel = null;

        if (value == 90) {

            target = pic1.rotateRight();

        } else if (value == -90) {

            target = pic1.rotateLeft();

        } else if (value == 180 || value == -180) {

            pic1.rotate180();
            target = pic1;

        } else if (value == - 270) {

            pic1.rotate180();
            target = pic1.rotateLeft();

        } else if (value == 270) {

            pic1.rotate180();
            target = pic1.rotateRight();

        } else if (value == 360 || value == -360) {

            target = pic1;

        } else {

            target = pic1;
        }
        Before1.setIcon(new ImageIcon(target.getImage().getScaledInstance(Before1.getWidth(), Before1.getHeight(), Image.SCALE_SMOOTH)));
    }//GEN-LAST:event_RotationStateChanged

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(RefAndRotation.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(RefAndRotation.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(RefAndRotation.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(RefAndRotation.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new RefAndRotation().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Before1;
    private javax.swing.JButton DiagonalRefD1;
    private javax.swing.JButton DiagonalRefD2;
    private javax.swing.JSlider Rotation;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSlider sliderReflectionF;
    private javax.swing.JSlider sliderReflectionH;
    // End of variables declaration//GEN-END:variables
}
